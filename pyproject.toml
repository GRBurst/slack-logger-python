[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "slack-logger-python"
description = "Slack logger utilizing python logging interface."
readme = "README.md"
requires-python = ">=3.10"
keywords = [
    "slack", "python",
    "logging", "logger", "log", "python-logging",
    "Handler", "Formatter", "logging.Handler", "logging.Formatter",
    "monitoring", "alerting",
    "slack-api", "webhook", "slack-logger",
    "messaging", "health-check", "notification-service", "notification",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Communications :: Chat",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: System :: Logging",
]

dynamic = ["dependencies", "version"]

[tool.setuptools.package-data]
slack_logger = ["py.typed"]

[tool.setuptools.dynamic]
version = {file = "VERSION"}
dependencies = {file = ["requirements.txt"]}

[[project.authors]]
name = "GRBurst"
email = "GRBurst@protonmail.com"

[project.urls]
"Homepage" = "https://github.com/GRBurst/slack-python-logging"
"Bug Tracker" = "https://github.com/GRBurst/slack-python-logging/issues"

[tool.black]
multi-line-output = 3
line-length = 120
target-version = ["py310"]
include = '\.pyi?$'
exclude = '''
(
  /(
    | \.git
    | \.github
    | \.venv
    | \.venv-ubunix
    | \.mypy_cache
  )/
)
'''


[tool.isort]
profile = "black"
skip_gitignore = true
line_length = 120


[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = [ "E501" ] # line to long will be ignored and is handled by black

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".venv*",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"


[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[tool.mypy]
disallow_untyped_defs = true
warn_return_any = true
warn_unused_configs = true


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --capture=tee-sys"
log_cli = true
testpaths = [
    "tests",
]
